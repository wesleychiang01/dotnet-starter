// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_SolarIOT.Data;

#nullable disable

namespace WebApp_SolarIOT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240106104006_InitialDBSetup")]
    partial class InitialDBSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp_SolarIOT.Models.ParameterEntities", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<DateTime>("EventProcessedUtcTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("accuracy")
                        .HasColumnType("real");

                    b.Property<float>("battery_amp")
                        .HasColumnType("real");

                    b.Property<float>("battery_volt")
                        .HasColumnType("real");

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.Property<float>("light_intensity")
                        .HasColumnType("real");

                    b.Property<float>("longitude")
                        .HasColumnType("real");

                    b.Property<float>("solar_amp")
                        .HasColumnType("real");

                    b.Property<float>("solar_volt")
                        .HasColumnType("real");

                    b.Property<float>("temperature")
                        .HasColumnType("real");

                    b.HasKey("EventID");

                    b.ToTable("parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
